/*     
**                  _______        
**                 |__   __|   reqT - a free requriements engineering tool  
**   _ __  ___   __ _ | |      (c) 2011-2014, Lund University  
**  |  __|/ _ \ / _  || |      http://reqT.org
**  | |  |  __/| (_| || |   
**  |_|   \___| \__  ||_|   
**                 | |      
**                 |_|      
** reqT is open source, licensed under the BSD 2-clause license: 
** http://opensource.org/licenses/bsd-license.php 
***************************************************************************/

digraph G { /* dot -T svg -o assets/img/metamodel-with-key.svg metamodel-with-key.dot */
  fontname = "Arial"
  fontsize = 10
  rankdir = "BT"
  ordering = "out"
  nojustify = true

  node [
    fontname = "Arial"
    fontsize = 10
    shape = "record"
  ]

  edge [
    fontname = "Arial"
    fontsize = 10
    arrowhead = "empty"
  ]
 
  { rank = same; Elem;  }
  { rank = same; Relation; Node_; MapTo; Key;}
  { rank = same;  Attribute; Entity; AttributeType; Head; Model;}

  Node_ [label = "Node"]
  MapTo [label = "MapTo"]  //or Item or Mapped or
  Attribute [label = "{Attribute[T]|val value: T}"]
  AttributeType [label = "{AttributeType[T]|val default: T}"]
  Entity [label = "{Entity|val id: String}"]
  Relation [label = "{Relation|val entity: Entity\lval link: RelationType\lval tail: Model\l }"]
  Head [label = "{Head|val entity: Entity\lval link: RelationType\l }"]
  Model [label = "{Model|def toVector: Vector[Elem]\ldef toMap: Map[Key, MapTo] }"]

  Node_ -> Elem
  Relation -> Elem
  Attribute -> Node_
  Attribute -> MapTo
  Entity -> Node_
  
  Model -> MapTo
  
  AttributeType -> Key
  Head -> Key
  
}